// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Course {
  id           String        @id @default(uuid())
  name         String
  description  String?
  apiKeys      ApiKey[]
  certificates Certificate[]
  batches      Batch[]
}

model Batch {
  id           String        @id @default(uuid())
  name         String
  courseId     String
  course       Course        @relation(fields: [courseId], references: [id])
  certificates Certificate[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model ApiKey {
  id        String   @id @default(uuid())
  key       String   @unique
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Certificate {
  id              String          @id @default(uuid())
  recipientName   String
  issueDate       DateTime        @default(now())
  code            String          @unique
  type            CertificateType
  robloxUserID    String? // Optional, for roleplay certifications
  recipientUserID String? // Optional, for team member recognition
  externalOrg     String? // Optional, for external collaborations
  identifier      String // For NRIC, Passport, Roblox ID etc. to ensure uniqueness per type per course
  courseId        String
  course          Course          @relation(fields: [courseId], references: [id])
  batchId         String?
  batch           Batch?          @relation(fields: [batchId], references: [id])

  @@unique([courseId, identifier, type], name: "unique_certificate_identifier")
}

// New enum to represent certificate types
enum CertificateType {
  ROLEPLAY
  TEAM_RECOGNITION
  EXTERNAL
}
